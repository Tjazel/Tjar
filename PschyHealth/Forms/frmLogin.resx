<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>